<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tz.mapper.ZaContentEvaluateMapper" >
  <resultMap id="BaseResultMap" type="com.tz.pojo.ZaContentEvaluate" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="content_id" property="contentId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="comment_time" property="commentTime" jdbcType="TIMESTAMP" />
    <result column="show_status" property="showStatus" jdbcType="INTEGER" />
    <result column="reply" property="reply" jdbcType="VARCHAR" />
    <result column="reply_time" property="replyTime" jdbcType="TIMESTAMP" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, content_id, user_id, comment, comment_time, show_status, reply, reply_time, operator
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tz.pojo.ZaContentEvaluateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from za_content_evaluate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from za_content_evaluate
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from za_content_evaluate
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.tz.pojo.ZaContentEvaluateExample" >
    delete from za_content_evaluate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tz.pojo.ZaContentEvaluate" >
    insert into za_content_evaluate (id, content_id, user_id, 
      comment, comment_time, show_status, 
      reply, reply_time, operator
      )
    values (#{id,jdbcType=VARCHAR}, #{contentId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{comment,jdbcType=VARCHAR}, #{commentTime,jdbcType=TIMESTAMP}, #{showStatus,jdbcType=INTEGER}, 
      #{reply,jdbcType=VARCHAR}, #{replyTime,jdbcType=TIMESTAMP}, #{operator,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tz.pojo.ZaContentEvaluate" >
    insert into za_content_evaluate
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="contentId != null" >
        content_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="commentTime != null" >
        comment_time,
      </if>
      <if test="showStatus != null" >
        show_status,
      </if>
      <if test="reply != null" >
        reply,
      </if>
      <if test="replyTime != null" >
        reply_time,
      </if>
      <if test="operator != null" >
        operator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="contentId != null" >
        #{contentId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null" >
        #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="showStatus != null" >
        #{showStatus,jdbcType=INTEGER},
      </if>
      <if test="reply != null" >
        #{reply,jdbcType=VARCHAR},
      </if>
      <if test="replyTime != null" >
        #{replyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tz.pojo.ZaContentEvaluateExample" resultType="java.lang.Integer" >
    select count(*) from za_content_evaluate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update za_content_evaluate
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.contentId != null" >
        content_id = #{record.contentId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null" >
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.commentTime != null" >
        comment_time = #{record.commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.showStatus != null" >
        show_status = #{record.showStatus,jdbcType=INTEGER},
      </if>
      <if test="record.reply != null" >
        reply = #{record.reply,jdbcType=VARCHAR},
      </if>
      <if test="record.replyTime != null" >
        reply_time = #{record.replyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operator != null" >
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update za_content_evaluate
    set id = #{record.id,jdbcType=VARCHAR},
      content_id = #{record.contentId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR},
      comment_time = #{record.commentTime,jdbcType=TIMESTAMP},
      show_status = #{record.showStatus,jdbcType=INTEGER},
      reply = #{record.reply,jdbcType=VARCHAR},
      reply_time = #{record.replyTime,jdbcType=TIMESTAMP},
      operator = #{record.operator,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tz.pojo.ZaContentEvaluate" >
    update za_content_evaluate
    <set >
      <if test="contentId != null" >
        content_id = #{contentId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null" >
        comment_time = #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="showStatus != null" >
        show_status = #{showStatus,jdbcType=INTEGER},
      </if>
      <if test="reply != null" >
        reply = #{reply,jdbcType=VARCHAR},
      </if>
      <if test="replyTime != null" >
        reply_time = #{replyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tz.pojo.ZaContentEvaluate" >
    update za_content_evaluate
    set content_id = #{contentId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      comment_time = #{commentTime,jdbcType=TIMESTAMP},
      show_status = #{showStatus,jdbcType=INTEGER},
      reply = #{reply,jdbcType=VARCHAR},
      reply_time = #{replyTime,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>