<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tz.mapper.ZaSysNoticeMapper" >
  <resultMap id="BaseResultMap" type="com.tz.pojo.ZaSysNotice" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="system_id" property="systemId" jdbcType="VARCHAR" />
    <result column="from_user_id" property="fromUserId" jdbcType="VARCHAR" />
    <result column="to_user_id" property="toUserId" jdbcType="VARCHAR" />
    <result column="event_id" property="eventId" jdbcType="VARCHAR" />
    <result column="notice_type" property="noticeType" jdbcType="INTEGER" />
    <result column="agree" property="agree" jdbcType="INTEGER" />
    <result column="handle_state" property="handleState" jdbcType="INTEGER" />
    <result column="del_state" property="delState" jdbcType="INTEGER" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.tz.pojo.ZaSysNotice" extends="BaseResultMap" >
    <result column="message" property="message" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, system_id, from_user_id, to_user_id, event_id, notice_type, agree, handle_state, 
    del_state, created_time, updated_time
  </sql>
  <sql id="Blob_Column_List" >
    message
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.tz.pojo.ZaSysNoticeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from za_sys_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tz.pojo.ZaSysNoticeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from za_sys_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from za_sys_notice
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from za_sys_notice
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.tz.pojo.ZaSysNoticeExample" >
    delete from za_sys_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tz.pojo.ZaSysNotice" >
    insert into za_sys_notice (id, system_id, from_user_id, 
      to_user_id, event_id, notice_type, 
      agree, handle_state, del_state, 
      created_time, updated_time, message
      )
    values (#{id,jdbcType=BIGINT}, #{systemId,jdbcType=VARCHAR}, #{fromUserId,jdbcType=VARCHAR}, 
      #{toUserId,jdbcType=VARCHAR}, #{eventId,jdbcType=VARCHAR}, #{noticeType,jdbcType=INTEGER}, 
      #{agree,jdbcType=INTEGER}, #{handleState,jdbcType=INTEGER}, #{delState,jdbcType=INTEGER}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, #{message,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tz.pojo.ZaSysNotice" >
    insert into za_sys_notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="systemId != null" >
        system_id,
      </if>
      <if test="fromUserId != null" >
        from_user_id,
      </if>
      <if test="toUserId != null" >
        to_user_id,
      </if>
      <if test="eventId != null" >
        event_id,
      </if>
      <if test="noticeType != null" >
        notice_type,
      </if>
      <if test="agree != null" >
        agree,
      </if>
      <if test="handleState != null" >
        handle_state,
      </if>
      <if test="delState != null" >
        del_state,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
      <if test="message != null" >
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="systemId != null" >
        #{systemId,jdbcType=VARCHAR},
      </if>
      <if test="fromUserId != null" >
        #{fromUserId,jdbcType=VARCHAR},
      </if>
      <if test="toUserId != null" >
        #{toUserId,jdbcType=VARCHAR},
      </if>
      <if test="eventId != null" >
        #{eventId,jdbcType=VARCHAR},
      </if>
      <if test="noticeType != null" >
        #{noticeType,jdbcType=INTEGER},
      </if>
      <if test="agree != null" >
        #{agree,jdbcType=INTEGER},
      </if>
      <if test="handleState != null" >
        #{handleState,jdbcType=INTEGER},
      </if>
      <if test="delState != null" >
        #{delState,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="message != null" >
        #{message,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tz.pojo.ZaSysNoticeExample" resultType="java.lang.Integer" >
    select count(*) from za_sys_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update za_sys_notice
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.systemId != null" >
        system_id = #{record.systemId,jdbcType=VARCHAR},
      </if>
      <if test="record.fromUserId != null" >
        from_user_id = #{record.fromUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.toUserId != null" >
        to_user_id = #{record.toUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.eventId != null" >
        event_id = #{record.eventId,jdbcType=VARCHAR},
      </if>
      <if test="record.noticeType != null" >
        notice_type = #{record.noticeType,jdbcType=INTEGER},
      </if>
      <if test="record.agree != null" >
        agree = #{record.agree,jdbcType=INTEGER},
      </if>
      <if test="record.handleState != null" >
        handle_state = #{record.handleState,jdbcType=INTEGER},
      </if>
      <if test="record.delState != null" >
        del_state = #{record.delState,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null" >
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.message != null" >
        message = #{record.message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update za_sys_notice
    set id = #{record.id,jdbcType=BIGINT},
      system_id = #{record.systemId,jdbcType=VARCHAR},
      from_user_id = #{record.fromUserId,jdbcType=VARCHAR},
      to_user_id = #{record.toUserId,jdbcType=VARCHAR},
      event_id = #{record.eventId,jdbcType=VARCHAR},
      notice_type = #{record.noticeType,jdbcType=INTEGER},
      agree = #{record.agree,jdbcType=INTEGER},
      handle_state = #{record.handleState,jdbcType=INTEGER},
      del_state = #{record.delState,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      message = #{record.message,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update za_sys_notice
    set id = #{record.id,jdbcType=BIGINT},
      system_id = #{record.systemId,jdbcType=VARCHAR},
      from_user_id = #{record.fromUserId,jdbcType=VARCHAR},
      to_user_id = #{record.toUserId,jdbcType=VARCHAR},
      event_id = #{record.eventId,jdbcType=VARCHAR},
      notice_type = #{record.noticeType,jdbcType=INTEGER},
      agree = #{record.agree,jdbcType=INTEGER},
      handle_state = #{record.handleState,jdbcType=INTEGER},
      del_state = #{record.delState,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tz.pojo.ZaSysNotice" >
    update za_sys_notice
    <set >
      <if test="systemId != null" >
        system_id = #{systemId,jdbcType=VARCHAR},
      </if>
      <if test="fromUserId != null" >
        from_user_id = #{fromUserId,jdbcType=VARCHAR},
      </if>
      <if test="toUserId != null" >
        to_user_id = #{toUserId,jdbcType=VARCHAR},
      </if>
      <if test="eventId != null" >
        event_id = #{eventId,jdbcType=VARCHAR},
      </if>
      <if test="noticeType != null" >
        notice_type = #{noticeType,jdbcType=INTEGER},
      </if>
      <if test="agree != null" >
        agree = #{agree,jdbcType=INTEGER},
      </if>
      <if test="handleState != null" >
        handle_state = #{handleState,jdbcType=INTEGER},
      </if>
      <if test="delState != null" >
        del_state = #{delState,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.tz.pojo.ZaSysNotice" >
    update za_sys_notice
    set system_id = #{systemId,jdbcType=VARCHAR},
      from_user_id = #{fromUserId,jdbcType=VARCHAR},
      to_user_id = #{toUserId,jdbcType=VARCHAR},
      event_id = #{eventId,jdbcType=VARCHAR},
      notice_type = #{noticeType,jdbcType=INTEGER},
      agree = #{agree,jdbcType=INTEGER},
      handle_state = #{handleState,jdbcType=INTEGER},
      del_state = #{delState,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      message = #{message,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tz.pojo.ZaSysNotice" >
    update za_sys_notice
    set system_id = #{systemId,jdbcType=VARCHAR},
      from_user_id = #{fromUserId,jdbcType=VARCHAR},
      to_user_id = #{toUserId,jdbcType=VARCHAR},
      event_id = #{eventId,jdbcType=VARCHAR},
      notice_type = #{noticeType,jdbcType=INTEGER},
      agree = #{agree,jdbcType=INTEGER},
      handle_state = #{handleState,jdbcType=INTEGER},
      del_state = #{delState,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>