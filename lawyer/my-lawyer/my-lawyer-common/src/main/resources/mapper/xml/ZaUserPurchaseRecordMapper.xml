<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tz.mapper.ZaUserPurchaseRecordMapper" >
  <resultMap id="BaseResultMap" type="com.tz.pojo.ZaUserPurchaseRecord" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="user_type" property="userType" jdbcType="INTEGER" />
    <result column="deal_code" property="dealCode" jdbcType="VARCHAR" />
    <result column="pay_cash" property="payCash" jdbcType="DECIMAL" />
    <result column="pay_type" property="payType" jdbcType="INTEGER" />
    <result column="pay_status" property="payStatus" jdbcType="INTEGER" />
    <result column="consum_type" property="consumType" jdbcType="INTEGER" />
    <result column="in_out" property="inOut" jdbcType="INTEGER" />
    <result column="event_desc" property="eventDesc" jdbcType="VARCHAR" />
    <result column="user_account" property="userAccount" jdbcType="VARCHAR" />
    <result column="payee_real_name" property="payeeRealName" jdbcType="VARCHAR" />
    <result column="consum_time" property="consumTime" jdbcType="TIMESTAMP" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, user_type, deal_code, pay_cash, pay_type, pay_status, consum_type, in_out, 
    event_desc, user_account, payee_real_name, consum_time, created_time, updated_time, 
    operator
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tz.pojo.ZaUserPurchaseRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from za_user_purchase_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from za_user_purchase_record
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from za_user_purchase_record
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.tz.pojo.ZaUserPurchaseRecordExample" >
    delete from za_user_purchase_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tz.pojo.ZaUserPurchaseRecord" >
    insert into za_user_purchase_record (id, user_id, user_type, 
      deal_code, pay_cash, pay_type, 
      pay_status, consum_type, in_out, 
      event_desc, user_account, payee_real_name, 
      consum_time, created_time, updated_time, 
      operator)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{userType,jdbcType=INTEGER}, 
      #{dealCode,jdbcType=VARCHAR}, #{payCash,jdbcType=DECIMAL}, #{payType,jdbcType=INTEGER}, 
      #{payStatus,jdbcType=INTEGER}, #{consumType,jdbcType=INTEGER}, #{inOut,jdbcType=INTEGER}, 
      #{eventDesc,jdbcType=VARCHAR}, #{userAccount,jdbcType=VARCHAR}, #{payeeRealName,jdbcType=VARCHAR}, 
      #{consumTime,jdbcType=TIMESTAMP}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{operator,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tz.pojo.ZaUserPurchaseRecord" >
    insert into za_user_purchase_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="dealCode != null" >
        deal_code,
      </if>
      <if test="payCash != null" >
        pay_cash,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="payStatus != null" >
        pay_status,
      </if>
      <if test="consumType != null" >
        consum_type,
      </if>
      <if test="inOut != null" >
        in_out,
      </if>
      <if test="eventDesc != null" >
        event_desc,
      </if>
      <if test="userAccount != null" >
        user_account,
      </if>
      <if test="payeeRealName != null" >
        payee_real_name,
      </if>
      <if test="consumTime != null" >
        consum_time,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
      <if test="operator != null" >
        operator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="dealCode != null" >
        #{dealCode,jdbcType=VARCHAR},
      </if>
      <if test="payCash != null" >
        #{payCash,jdbcType=DECIMAL},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null" >
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="consumType != null" >
        #{consumType,jdbcType=INTEGER},
      </if>
      <if test="inOut != null" >
        #{inOut,jdbcType=INTEGER},
      </if>
      <if test="eventDesc != null" >
        #{eventDesc,jdbcType=VARCHAR},
      </if>
      <if test="userAccount != null" >
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="payeeRealName != null" >
        #{payeeRealName,jdbcType=VARCHAR},
      </if>
      <if test="consumTime != null" >
        #{consumTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tz.pojo.ZaUserPurchaseRecordExample" resultType="java.lang.Integer" >
    select count(*) from za_user_purchase_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update za_user_purchase_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null" >
        user_type = #{record.userType,jdbcType=INTEGER},
      </if>
      <if test="record.dealCode != null" >
        deal_code = #{record.dealCode,jdbcType=VARCHAR},
      </if>
      <if test="record.payCash != null" >
        pay_cash = #{record.payCash,jdbcType=DECIMAL},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.payStatus != null" >
        pay_status = #{record.payStatus,jdbcType=INTEGER},
      </if>
      <if test="record.consumType != null" >
        consum_type = #{record.consumType,jdbcType=INTEGER},
      </if>
      <if test="record.inOut != null" >
        in_out = #{record.inOut,jdbcType=INTEGER},
      </if>
      <if test="record.eventDesc != null" >
        event_desc = #{record.eventDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.userAccount != null" >
        user_account = #{record.userAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.payeeRealName != null" >
        payee_real_name = #{record.payeeRealName,jdbcType=VARCHAR},
      </if>
      <if test="record.consumTime != null" >
        consum_time = #{record.consumTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null" >
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operator != null" >
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update za_user_purchase_record
    set id = #{record.id,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=INTEGER},
      deal_code = #{record.dealCode,jdbcType=VARCHAR},
      pay_cash = #{record.payCash,jdbcType=DECIMAL},
      pay_type = #{record.payType,jdbcType=INTEGER},
      pay_status = #{record.payStatus,jdbcType=INTEGER},
      consum_type = #{record.consumType,jdbcType=INTEGER},
      in_out = #{record.inOut,jdbcType=INTEGER},
      event_desc = #{record.eventDesc,jdbcType=VARCHAR},
      user_account = #{record.userAccount,jdbcType=VARCHAR},
      payee_real_name = #{record.payeeRealName,jdbcType=VARCHAR},
      consum_time = #{record.consumTime,jdbcType=TIMESTAMP},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      operator = #{record.operator,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tz.pojo.ZaUserPurchaseRecord" >
    update za_user_purchase_record
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="dealCode != null" >
        deal_code = #{dealCode,jdbcType=VARCHAR},
      </if>
      <if test="payCash != null" >
        pay_cash = #{payCash,jdbcType=DECIMAL},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null" >
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="consumType != null" >
        consum_type = #{consumType,jdbcType=INTEGER},
      </if>
      <if test="inOut != null" >
        in_out = #{inOut,jdbcType=INTEGER},
      </if>
      <if test="eventDesc != null" >
        event_desc = #{eventDesc,jdbcType=VARCHAR},
      </if>
      <if test="userAccount != null" >
        user_account = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="payeeRealName != null" >
        payee_real_name = #{payeeRealName,jdbcType=VARCHAR},
      </if>
      <if test="consumTime != null" >
        consum_time = #{consumTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tz.pojo.ZaUserPurchaseRecord" >
    update za_user_purchase_record
    set user_id = #{userId,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=INTEGER},
      deal_code = #{dealCode,jdbcType=VARCHAR},
      pay_cash = #{payCash,jdbcType=DECIMAL},
      pay_type = #{payType,jdbcType=INTEGER},
      pay_status = #{payStatus,jdbcType=INTEGER},
      consum_type = #{consumType,jdbcType=INTEGER},
      in_out = #{inOut,jdbcType=INTEGER},
      event_desc = #{eventDesc,jdbcType=VARCHAR},
      user_account = #{userAccount,jdbcType=VARCHAR},
      payee_real_name = #{payeeRealName,jdbcType=VARCHAR},
      consum_time = #{consumTime,jdbcType=TIMESTAMP},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>